<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--
    этот контекст нужен что бы работать чисто через анотации не добовляя bean в xml
    точнее он сканирует все классы ищет @Component, @CompanyService, @Repository, @Controller
    и добовляет их в контекс
    -->
    <context:component-scan base-package="io.containing.annotationConfigure"/>

    <!--
    подключили CommonAnnotationBeanPostProcessor это спецыальный бин который позволяет работать с анатациями
    так же у нас есть возможность зделать это через множество имен и все будет работоать
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>
    -->
    <context:annotation-config/>



    <context:property-placeholder location="classpath:application.properties"/>



    <bean class="io.containing.annotationConfigure.pool.InjectBeenPostProcessor"/>
    <bean name="userPool" class="io.containing.annotationConfigure.pool.UserPool"/>

    <bean name="pool" class="io.containing.annotationConfigure.pool.Pool">
        <constructor-arg name="name" value="aleksey"/>
        <constructor-arg name="password" value="123"/>
        <constructor-arg name="poolSize" value="9090"/>
        <constructor-arg name="url" value="http//"/>
    </bean>

    <bean name="user3" id="id5" class="io.containing.annotationConfigure.model.User">
        <property name="name" ref="lex"/>
        <property name="size" value="173"/>
        <property name="list">
            <list value-type="java.lang.Double">
                <value>2.2</value>
                <value>3.2</value>
                <value>6.5</value>
            </list>
        </property>
        <property name="map">
            <map key-type="java.lang.Integer" value-type="java.lang.String">
                <entry key="34" value-ref="lex"/>
                <entry key="33" value="ll"/>
                <entry key="21" value="cvc"/>
            </map>
        </property>
    </bean>
    <bean name="lex" class="java.lang.String">
        <constructor-arg value="Been Aleksei"/>
    </bean>
</beans>